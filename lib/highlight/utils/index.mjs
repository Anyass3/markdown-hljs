let e;const r=[],t=r=>{e=r},n=()=>e;function o(e){return(new DOMParser).parseFromString(e,"text/html").documentElement.textContent}async function c({lang:t="",alias:n=[],fn:o}){o&&void 0!==e&&e.registerLanguage(t,o),r.push({0:t,alias:n})}const a=e=>{for(let t of r)if(t[0]===e||t.alias.includes(e))return t[0];return e},l=(r,t)=>{r=a(r);try{let n="";for(let o of t.split("\n"))n+=e.highlight(r,o).value+"<br>";return n}catch(e){return console.log(e),t}},s=e=>{let r=/<pre><code( class=['"]language-(?<lang>[a-z]+)['"])?>(?<code>(?:(?!<\/code><\/pre>).[\n\t]*)+)<\/code><\/pre>/,t="",n="";for(;;){const c=e.match(r);if(!c)break;const a=o(c.groups.code),s=c.groups.lang;if(t===a&&n===s)break;t=a,n=s;const u=l(s,a);e=s?e.replace(c[0],`<pre><code class='hljs ${s}'>${u}</code></pre>`):e.replace(c[0],`<pre><code class='hljs'>${u}</code></pre>`)}return e};export{s as Highlight,n as getHljs,a as getLang,l as highlightCode,t as setHljs,c as setLang};
